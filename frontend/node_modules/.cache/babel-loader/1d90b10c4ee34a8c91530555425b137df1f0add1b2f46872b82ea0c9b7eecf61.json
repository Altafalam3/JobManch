{"ast":null,"code":"var _jsxFileName = \"D:\\\\MERN_TEMPLATE\\\\frontend\\\\src\\\\context\\\\UserContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext();\nexport const UserProvider = ({\n  children\n}) => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userr, setUserr] = useState({});\n  const checkUserLoggedIn = async () => {\n    try {\n      // This includes cookies in the request\n      const response = await axios.get('http://localhost:8800/api/auth/user', {\n        withCredentials: true,\n        credentials: \"include\"\n      });\n      console.log(response.data);\n      if (response.data.status) {\n        setIsLoggedIn(true);\n        setUserr(response.data.user);\n        console.log(response.data.user);\n      } else {\n        setIsLoggedIn(false);\n        setUserr({});\n      }\n    } catch (error) {\n      console.error('Error checking user login status:', error);\n    }\n  };\n  const handleLogout = async () => {\n    try {\n      const response = await axios.get('http://localhost:8800/api/auth/logout', {\n        withCredentials: true,\n        credentials: \"include\"\n      });\n      console.log(response.data);\n      setIsLoggedIn(false);\n      setUserr({});\n      console.log(userr, \"user delted\");\n    } catch (error) {\n      console.error('Error during logout:', error);\n    }\n  };\n  useEffect(() => {\n    checkUserLoggedIn();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      isLoggedIn,\n      userr,\n      checkUserLoggedIn,\n      handleLogout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 7\n  }, this);\n};\n_s(UserProvider, \"7I6t3d9v+xCMC5ZnLRr2cd2IJz0=\");\n_c = UserProvider;\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","UserContext","UserProvider","children","_s","isLoggedIn","setIsLoggedIn","userr","setUserr","checkUserLoggedIn","response","get","withCredentials","credentials","console","log","data","status","user","error","handleLogout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/MERN_TEMPLATE/frontend/src/context/UserContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport const UserContext = createContext();\r\n\r\nexport const UserProvider = ({ children }) => {\r\n\r\n   const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n   const [userr, setUserr] = useState({});\r\n\r\n   const checkUserLoggedIn = async () => {\r\n      try {\r\n         // This includes cookies in the request\r\n         const response = await axios.get('http://localhost:8800/api/auth/user', {\r\n            withCredentials: true,\r\n            credentials: \"include\",\r\n         });\r\n\r\n         console.log(response.data);\r\n         if (response.data.status) {\r\n            setIsLoggedIn(true);\r\n            setUserr(response.data.user);\r\n            console.log(response.data.user);\r\n         }\r\n         else {\r\n            setIsLoggedIn(false);\r\n            setUserr({});\r\n         }\r\n      } catch (error) {\r\n         console.error('Error checking user login status:', error);\r\n      }\r\n   };\r\n\r\n\r\n   const handleLogout = async () => {\r\n      try {\r\n         const response = await axios.get('http://localhost:8800/api/auth/logout', {\r\n            withCredentials: true,\r\n            credentials: \"include\",\r\n         });\r\n         console.log(response.data);\r\n         setIsLoggedIn(false);\r\n         setUserr({});\r\n         console.log(userr, \"user delted\");\r\n\r\n      } catch (error) {\r\n         console.error('Error during logout:', error);\r\n      }\r\n   };\r\n\r\n\r\n   useEffect(() => {\r\n      checkUserLoggedIn();\r\n   }, []);\r\n\r\n   return (\r\n      <UserContext.Provider value={{ isLoggedIn, userr, checkUserLoggedIn, handleLogout }}>\r\n         {children}\r\n      </UserContext.Provider>\r\n   );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAE3C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEtC,MAAMa,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACD;MACA,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,qCAAqC,EAAE;QACrEC,eAAe,EAAE,IAAI;QACrBC,WAAW,EAAE;MAChB,CAAC,CAAC;MAEFC,OAAO,CAACC,GAAG,CAACL,QAAQ,CAACM,IAAI,CAAC;MAC1B,IAAIN,QAAQ,CAACM,IAAI,CAACC,MAAM,EAAE;QACvBX,aAAa,CAAC,IAAI,CAAC;QACnBE,QAAQ,CAACE,QAAQ,CAACM,IAAI,CAACE,IAAI,CAAC;QAC5BJ,OAAO,CAACC,GAAG,CAACL,QAAQ,CAACM,IAAI,CAACE,IAAI,CAAC;MAClC,CAAC,MACI;QACFZ,aAAa,CAAC,KAAK,CAAC;QACpBE,QAAQ,CAAC,CAAC,CAAC,CAAC;MACf;IACH,CAAC,CAAC,OAAOW,KAAK,EAAE;MACbL,OAAO,CAACK,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;IAC5D;EACH,CAAC;EAGD,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACD,MAAMV,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,uCAAuC,EAAE;QACvEC,eAAe,EAAE,IAAI;QACrBC,WAAW,EAAE;MAChB,CAAC,CAAC;MACFC,OAAO,CAACC,GAAG,CAACL,QAAQ,CAACM,IAAI,CAAC;MAC1BV,aAAa,CAAC,KAAK,CAAC;MACpBE,QAAQ,CAAC,CAAC,CAAC,CAAC;MACZM,OAAO,CAACC,GAAG,CAACR,KAAK,EAAE,aAAa,CAAC;IAEpC,CAAC,CAAC,OAAOY,KAAK,EAAE;MACbL,OAAO,CAACK,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC/C;EACH,CAAC;EAGDtB,SAAS,CAAC,MAAM;IACbY,iBAAiB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACGT,OAAA,CAACC,WAAW,CAACoB,QAAQ;IAACC,KAAK,EAAE;MAAEjB,UAAU;MAAEE,KAAK;MAAEE,iBAAiB;MAAEW;IAAa,CAAE;IAAAjB,QAAA,EAChFA;EAAQ;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAE7B,CAAC;AAACtB,EAAA,CAvDWF,YAAY;AAAAyB,EAAA,GAAZzB,YAAY;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}